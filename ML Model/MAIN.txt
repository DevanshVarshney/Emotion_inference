#include "DHTesp.h"
# include <WiFi.h>
# include <HTTPClient.h>

const char* ssid = "Wokwi-GUEST";
const char* password = "";
String serverName="http://api.thingspeak.com/update?api_key=BYJ3GGBF85CWWD8C";

int lastTime=0;
int timerDelay=1;

const int DHT_PIN = 15;
DHTesp dhtSensor;


int ldrResistance;
int brightnessLED;
String weather;

void setup() {
  pinMode(17, INPUT);
  pinMode(5, INPUT);
  Serial.begin(115200);
  dhtSensor.setup(DHT_PIN, DHTesp::DHT22);
  
  WiFi.begin(ssid, password);
  Serial.println("Connecting");
  while(WiFi.status()!= WL_CONNECTED){
    delay(500);
    Serial.print("");
  }
  Serial.println("");
  Serial.println("Connected to WiFi network with IP ADD : ");
  Serial.print(WiFi.localIP());
  Serial.println("Timer set to 10 seconds (timerDelay variable), it will take 10 seconds before publishing the first reading.");
}

void loop() {
  TempAndHumidity  data = dhtSensor.getTempAndHumidity();
  ldrResistance=analogRead(17);
  if (ldrResistance <1000) {
    brightnessLED = 0;
  }
  else{
    brightnessLED=ldrResistance;
  }
  analogWrite(2, brightnessLED);
  float temp = data.temperature;
  float humd = data.humidity;
  float drivingVoltageLED = (5./8191.)*brightnessLED;
  Serial.println("Temp: " + String(temp) + "Â°C");
  Serial.println("Humidity: " + String(humd) + "%");
  Serial.println("Brightness : "+String(analogRead(17)));
  Serial.println("Current Voltage Driving LEDs : "+String(drivingVoltageLED));
  Serial.println("---");
  int weatherVal = 8126 - ldrResistance;
  Serial.println("Weather val "+String(weatherVal));
  if (weatherVal>7126){
    weather = "Sunny";
    Serial.println("Current Weather : ");
    Serial.print(weather);
  }
  else if(weatherVal <=6700 && weatherVal>4500 && (temp<=25 && temp > 18)){
    weather = "Cloudy";
    Serial.println("Current Weather : ");
    Serial.print(weather);
  }
    else if(weatherVal <=4500 && weatherVal>2500 && (temp<=18 && temp > 10)){
    weather = "Dense Cloud";
    Serial.println("Current Weather : ");
    Serial.print(weather);
  }
    else if(weatherVal <=2500 && (temp<=10)){
    weather = "Night";
    Serial.println("Current Weather : ");
    Serial.print(weather);
  } 
  delay(2000); // Wait for a new reading from the sensor (DHT22 has ~0.5Hz sample rate)

  if ((millis() - lastTime) > timerDelay) {
    if(WiFi.status()== WL_CONNECTED){
      WiFiClient client;
      HTTPClient http;

      String tempServerPath = serverName + "&field1=" + String(temp);
      String humServerPath = serverName + "&field2=" + String(humd);
      String voltServerPath = serverName + "&field3=" + String(drivingVoltageLED);
      http.begin(client, tempServerPath.c_str());
      delay(50);
      http.begin(client, humServerPath.c_str());
      delay(50);
      http.begin(client, voltServerPath.c_str());
      delay(50);
      int httpResponseCode = http.GET();
      
      if (httpResponseCode > 0){
        Serial.print("HTTP RESPONSE CODE : ");
        Serial.println(httpResponseCode);
        String payload = http.getString();
        Serial.println(payload);
      }
      else{
        Serial.print("ERROR CODE : ");
        Serial.println(httpResponseCode);
        String payload = http.getString();
        Serial.println(payload);
      }

      http.end();
    }
    else{
      Serial.println("Wifi Disconnected");
    }
    lastTime=millis();


}}